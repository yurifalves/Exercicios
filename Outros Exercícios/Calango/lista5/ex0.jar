algoritmo Vetores;
// Calculadora de vetores, considerando o Espaço Vetorial Euclidiano R^n
//  Objetivo:  Calcular propriedades relativas entre 2 vetores definidos em R^n
//  Entrada :  As componentes de cada vetor
//  Saída   :  O cálculo desejado pelo usuário


principal
	// Declarações
	inteiro n;  // número de componentes dos vetores que participarão do cálculo
	real u[100], v[100];  // Os dois vetores em R^n, u=(u_1, u_2, ..., u_n) e v=(v_1, v_2, ..., v_n), onde 0 ≤ n ≤ 100
	inteiro opcao;
	inteiro i;

	// Instruções
	escreval("=-=-=-=-=-=-=-=-=-=-=-=-=-");
	escreval("  CALCULADORA DE VETORES  ");
	escreval("=-=-=-=-=-=-=-=-=-=-=-=-=-");
	
	escreva("Insira o Número de componentes dos vetores: ");
	leia(n);
	quebrarLinha(1);

	escreval("Insira as", " ", n, " ", "componentes do primeiro vetor: ");
	para (i de 0 ate n-1 passo 1) faca
		leia(u[i]);
	fimPara
	escreval("Insira as", " ", n, " ", "componentes do segundo vetor: ");
	para (i de 0 ate n-1 passo 1) faca
		leia(v[i]);
	fimPara
	quebrarLinha(2);
	escreval("Foram identificados os 2 vetores em R^", n);
	escreval("u = ", formatarVetor(u, n));
	escreval("v = ", formatarVetor(v, n));


	quebrarLinha(3);
	escreval("AGORA, ESCOLHA A OPERAÇÃO DESEJADA COM OS VETORES:");
	escreval("(0) Visão geral");
	escreval("(1) Norma dos vetores");
	escreval("(2) Ângulo entre os vetores");
	escreval("(3) Produto Interno Euclidiano (Produto Escalar) entre os vetores");
	escreval("(4) Produtos Vetoriais entre os vetores");
	escreva("-->");
	leia(opcao);
	escolha (opcao)
		caso 0
	        escreval("caso0");
	        interrompa;
	    caso 1
	        escreval("caso1");
	        interrompa;
	    caso 2
	        escreval("caso2");
	        interrompa;
		caso 3
        	escreval("PRODUTO INTERNO:");
	        escreval("u•v = ", produtoInterno(u, v, n));
	        interrompa;
        caso 4
        	se (n==3) entao  // O produto vetorial só existe quando ambos os vetores pertencem à R^n
	        	escreval("PRODUTOS VETORIAIS:");
	        	escreval("u×v = ", produtoVetorial(u, v));
	        	escreval("v×u = ", produtoVetorial(v, u));
	        senao
	        	escreval("Os produtos vetoriais u×v e v×u não estão definidos!");
	        fimSe
	        interrompa;
	    outroCaso
	        escreval("opssssssssss");
	fimEscolha

fimPrincipal

procedimento quebrarLinha(inteiro qtdQuebrasDeLinha)
	/*
	 * Recebe um número inteiro e realiza a quebra de linha pela quantidade de vezes especificada
	 */
	inteiro i;
	para (i de 0 ate qtdQuebrasDeLinha-1 passo 1) faca
		escreval("");
	fimPara
fimProcedimento

funcao texto formatarVetor(real array[], inteiro tamanhoVetor)
	/*
	 * Recebe um array e retorna a string equivalente à todas as componentes um vetor em R^n (componente_1, componente_2, ..., componente_n)
	 * Ex: {1, 7, -3, -90, 10.3, 2} --> "(1, 7, -3, -90, 10.3, 2)"
	 */
	inteiro i;
	texto arrayFormatado;
	arrayFormatado = "";
	para (i de 0 ate tamanhoVetor-1 passo 1) faca
		se (i!=tamanhoVetor-1) entao arrayFormatado = arrayFormatado + array[i] + ", ";
		senao arrayFormatado = arrayFormatado + array[i]; fimSe
	fimPara
	arrayFormatado = "(" + arrayFormatado + ")";
	retorna arrayFormatado;
fimFuncao

funcao real norma(real vetor[], inteiro tamanhoVetor)
	/*
	 * Recebe um vetor e retorna sua norma
	 * se u = (u_1, u_2, ..., u_n) for um vetor em R^n, então sua norma é ||u|| = √(u_1)^2+(u_2)^2+...(u_n)^2
	 */
	inteiro somaDosQuadrados;
	inteiro i;
	somaDosQuadrados = 0;
	para (i de 0 ate tamanhoVetor-1 passo 1) faca
		somaDosQuadrados = somaDosQuadrados + exp(vetor[i], 2); 
	fimPara
	
	retorna raizQuadrada(somaDosQuadrados);
fimFuncao

funcao real anguloEntreVetores(real vetor1[], real vetor2[], inteiro tamanhoVetores)
	/*
	 * Recebe dois vetores e retorna o ângulo entre esses dois vetores no espaço
	 * se u = (u_1, u_2, ..., u_n) e v = (v_1, v_2, ..., v_n) forem vetores em R^n, então o Ângulo entre esses dois vetores é θ = arccos(u•v/||u|| ||v||)
	 */
	inteiro somaDosQuadrados;
	inteiro i;
	somaDosQuadrados = 0;
	para (i de 0 ate tamanhoVetores-1 passo 1) faca
		somaDosQuadrados = somaDosQuadrados + exp(vetor1[i]+vetor2[i], 2); 
	fimPara
	
	retorna raizQuadrada(somaDosQuadrados);
fimFuncao

funcao real produtoInterno(real vetor1[], real vetor2[], inteiro tamanhoVetores)
	/*
	 * Recebe dois vetores e retorna o produto interno entre esses dois vetores no espaço
	 * se u = (u_1, u_2, ..., u_n) e v = (v_1, v_2, ..., v_n) forem vetores em R^n, então o Produto Interno entre esses dois vetores é u•v = ||u|| ||v|| cos(θ) = (u_1v_1 + u_2v_2 + ... + u_nv_n)
	 */
	inteiro produtoI;
	inteiro i;
	produtoI = 0;
	para (i de 0 ate tamanhoVetores-1 passo 1) faca
		produtoI = produtoI + vetor1[i]*vetor2[i];
	fimPara
	
	retorna produtoI;
fimFuncao

funcao texto produtoVetorial(real vetor1[], real vetor2[])
	/*
	 * Recebe dois vetores e retorna o produto vetorial entre esses dois vetores no espaço
	 * se u = (u_1, u_2, u_3) e v = (v_1, v_2, v_3) forem vetores em R^3, então o Produto Vetorial entre esses dois vetores é u×v = (u_2v_3-u_3v_2, u_3v_1-u_1v_3, u_1v_2-u_2v_1)
	 */
	real componente1, componente2, componente3;
	texto produtoV;
	componente1 = vetor1[1]*vetor2[2]-vetor1[2]*vetor2[1];
	componente2 = vetor1[2]*vetor2[0]-vetor1[0]*vetor2[2];
	componente3 = vetor1[0]*vetor2[1]-vetor1[1]*vetor2[0];
	
	produtoV = "(" + componente1 + ", " + componente2 + ", " + componente3 + ")";
	retorna produtoV;
fimFuncao

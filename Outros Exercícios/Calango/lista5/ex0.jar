algoritmo Vetores;
// Síntese
//  Objetivo:  Calcular propriedades relativas de 2 vetores no Espaço Vetorial Euclidiano R^n
//  Entrada :  As componentes de cada vetor
//  Saída   :  O cálculo desejado pelo usuário


principal
	// Declarações
	inteiro n;  // número de componentes dos vetores que participarão do cálculo
	real u[100], v[100];  // Os dois vetores em R^n, u=(u_1, u_2, ..., u_n) e v=(v_1, v_2, ..., v_n), onde 1 ≤ n ≤ 100
	inteiro opcao;
	inteiro i;

	// Instruções
	escreval("=-=-=-=-=-=-=-=-=-=-=-=-=-");
	escreval("  CALCULADORA DE VETORES  ");
	escreval("=-=-=-=-=-=-=-=-=-=-=-=-=-");
	
	escreva("Insira o Número de componentes dos vetores: ");
	leia(n);
	enquanto (n < 1) faca
		escreva("NÚMERO DE COMPONENTES INVÁLIDO. Insira algum valor maior ou igual a 1: ");
		leia(n);
	fimEnquanto
	quebrarLinha(1);

	escreval("Insira as", " ", n, " ", "componentes do primeiro vetor: ");
	para (i de 0 ate n-1 passo 1) faca
		leia(u[i]);
	fimPara
	escreval("Insira as", " ", n, " ", "componentes do segundo vetor: ");
	para (i de 0 ate n-1 passo 1) faca
		leia(v[i]);
	fimPara
	quebrarLinha(2);
	escreval("Foram identificados os 2 vetores em R^", n);
	escreval("u = ", formatarVetor(u, n));
	escreval("v = ", formatarVetor(v, n));


	quebrarLinha(1);
	escreval("AGORA, ESCOLHA A OPERAÇÃO DESEJADA COM OS VETORES:");
	escreval("(0) Visão geral");
	escreval("(1) Soma dos vetores");
	escreval("(2) Subtração dos vetores");
	escreval("(3) Norma dos vetores");
	escreval("(4) Produto Interno Euclidiano (Produto Escalar) entre os vetores");
	escreval("(5) Produtos Vetoriais entre os vetores");
	escreva("-->");
	leia(opcao);
	escolha (opcao)
		caso 0
			quebrarLinha(1);
	        escreval("SOMA:");
	        escreval("u+v = ", somaVetores(u, v, n));

	        escreval("SUBTRAÇÃO:");
	        escreval("u-v = ", subtracaoVetores(u, v, n));
	        escreval("v-u = ", subtracaoVetores(v, u, n));

	        escreval("NORMAS:");
	        escreval("||u|| = ", norma(u, n));
	        escreval("||v|| = ", norma(v, n));

	        escreval("PRODUTO INTERNO:");
	        escreval("u•v = ", produtoInterno(u, v, n));
	        
			escreval("PRODUTOS VETORIAIS:");
			se (n==3) entao  // O produto vetorial só existe quando ambos os vetores pertencem à R^n
	        	escreval("u×v = ", produtoVetorial(u, v));
	        	escreval("v×u = ", produtoVetorial(v, u));
	        senao
	        	escreval("Os produtos vetoriais u×v e v×u não estão definidos!");
	        fimSe

	        interrompa;
	    caso 1
	    	quebrarLinha(1);
	        escreval("SOMA:");
	        escreval("u+v = ", somaVetores(u, v, n));
	        interrompa;
	    caso 2
	    	quebrarLinha(1);
	        escreval("SUBTRAÇÃO:");
	        escreval("u-v = ", subtracaoVetores(u, v, n));
	        escreval("v-u = ", subtracaoVetores(v, u, n));
	        interrompa;
	    caso 3
	    	quebrarLinha(1);
	        escreval("NORMAS:");
	        escreval("||u|| = ", norma(u, n));
	        escreval("||v|| = ", norma(v, n));
	        interrompa;
	    caso 4
	    	quebrarLinha(1);
	        escreval("PRODUTO INTERNO:");
	        escreval("u•v = ", produtoInterno(u, v, n));
	        interrompa;
		caso 5
			quebrarLinha(1);
			escreval("PRODUTOS VETORIAIS:");
        	se (n==3) entao  // O produto vetorial só existe quando ambos os vetores pertencem à R^n
	        	escreval("u×v = ", produtoVetorial(u, v));
	        	escreval("v×u = ", produtoVetorial(v, u));
	        senao
	        	escreval("Os produtos vetoriais u×v e v×u não estão definidos!");
	        fimSe
	        interrompa;
	    outroCaso
	    	quebrarLinha(1);
	    	faca
				escreva("OPÇÃO INVÁLIDA. Escolha uma das opções entre 0 e 5: ");
				leia(opcao);
			enquanto (opcao!=0 e opcao!=1 e opcao!=2 e opcao!=3 e opcao!=4 e opcao!=5);

			// Agora finalmente a opcao selecionada é um numero de 0 a 5
			
			se (opcao == 0) entao
				quebrarLinha(1);
		        escreval("SOMA:");
		        escreval("u+v = ", somaVetores(u, v, n));
	
		        escreval("SUBTRAÇÃO:");
		        escreval("u-v = ", subtracaoVetores(u, v, n));
		        escreval("v-u = ", subtracaoVetores(v, u, n));

		        escreval("NORMAS:");
		        escreval("||u|| = ", norma(u, n));
		        escreval("||v|| = ", norma(v, n));
	
		        escreval("PRODUTO INTERNO:");
		        escreval("u•v = ", produtoInterno(u, v, n));
		        
				escreval("PRODUTOS VETORIAIS:");
				se (n==3) entao  // O produto vetorial só existe quando ambos os vetores pertencem à R^n
		        	escreval("u×v = ", produtoVetorial(u, v));
		        	escreval("v×u = ", produtoVetorial(v, u));
		        senao
		        	escreval("Os produtos vetoriais u×v e v×u não estão definidos!");
		        fimSe
			fimSe

			se (opcao == 1) entao
				quebrarLinha(1);
				escreval("SOMA:");
	        	escreval("u+v = ", somaVetores(u, v, n));
			fimSe

			se (opcao == 2) entao
				quebrarLinha(1);
				escreval("SUBTRAÇÃO:");
	        	escreval("u-v = ", subtracaoVetores(u, v, n));
	        	escreval("v-u = ", subtracaoVetores(v, u, n));
			fimSe

			se (opcao == 3) entao
				quebrarLinha(1);
				escreval("NORMAS:");
	        	escreval("||u|| = ", norma(u, n));
	        	escreval("||v|| = ", norma(v, n));
			fimSe

			se (opcao == 4) entao
				quebrarLinha(1);
				escreval("PRODUTO INTERNO:");
		        escreval("u•v = ", produtoInterno(u, v, n));
			fimSe

			se (opcao == 5) entao
				quebrarLinha(1);
				escreval("PRODUTOS VETORIAIS:");
				se (n==3) entao  // O produto vetorial só existe quando ambos os vetores pertencem à R^n
		        	escreval("u×v = ", produtoVetorial(u, v));
		        	escreval("v×u = ", produtoVetorial(v, u));
		        senao
		        	escreval("Os produtos vetoriais u×v e v×u não estão definidos!");
		        fimSe
			fimSe
			
	fimEscolha

fimPrincipal

procedimento quebrarLinha(inteiro qtdQuebrasDeLinha)
	/*
	 * Recebe um número inteiro e realiza a quebra de linha pela quantidade de vezes especificada
	 */
	inteiro i;
	para (i de 0 ate qtdQuebrasDeLinha-1 passo 1) faca
		escreval("");
	fimPara
fimProcedimento

funcao texto formatarVetor(real array[], inteiro tamanhoVetor)
	/*
	 * Recebe um array e retorna o texto equivalente à todas as componentes um vetor em R^n (componente_1, componente_2, ..., componente_n)
	 * Ex: {1, 7, -3, -90, 10.3, 2} --> "(1, 7, -3, -90, 10.3, 2)"
	 */
	inteiro i;
	texto arrayFormatado;
	arrayFormatado = "";
	para (i de 0 ate tamanhoVetor-1 passo 1) faca
		se (i!=tamanhoVetor-1) entao arrayFormatado = arrayFormatado + array[i] + ", ";
		senao arrayFormatado = arrayFormatado + array[i]; fimSe
	fimPara
	arrayFormatado = "(" + arrayFormatado + ")";
	retorna arrayFormatado;
fimFuncao

funcao texto somaVetores(real vetor1[], real vetor2[], inteiro tamanhoVetores)
	/*
	 * Recebe dois vetores e retorna a soma entre esses dois vetores no espaço
	 * se u = (u_1, u_2, ..., u_n) e v = (v_1, v_2, ..., v_n) forem vetores em R^n, então a soma entre esses dois vetores é u+v = (u_1+v_1, u_2+v_2, ..., u_n+v_n)
	 */
	real somaV[100];
	inteiro i;
	
	para (i de 0 ate tamanhoVetores-1 passo 1) faca
		somaV[i] = vetor1[i]+vetor2[i];
	fimPara
	
	retorna formatarVetor(somaV, tamanhoVetores);
fimFuncao

funcao texto subtracaoVetores(real vetor1[], real vetor2[], inteiro tamanhoVetores)
	/*
	 * Recebe dois vetores e retorna a subtracao entre esses dois vetores no espaço
	 * se u = (u_1, u_2, ..., u_n) e v = (v_1, v_2, ..., v_n) forem vetores em R^n, então a subtracao entre esses dois vetores é u-v = (u_1-v_1, u_2-v_2, ..., u_n-v_n)
	 */
	real subtracaoV[100];
	inteiro i;
	
	para (i de 0 ate tamanhoVetores-1 passo 1) faca
		subtracaoV[i] = vetor1[i]-vetor2[i];
	fimPara
	
	retorna formatarVetor(subtracaoV, tamanhoVetores);
fimFuncao

funcao real norma(real vetor[], inteiro tamanhoVetor)
	/*
	 * Recebe um vetor e retorna sua norma
	 * se u = (u_1, u_2, ..., u_n) for um vetor em R^n, então sua norma é ||u|| = √(u_1)^2+(u_2)^2+...(u_n)^2
	 */
	inteiro somaDosQuadrados;
	inteiro i;
	somaDosQuadrados = 0;
	para (i de 0 ate tamanhoVetor-1 passo 1) faca
		somaDosQuadrados = somaDosQuadrados + exp(vetor[i], 2); 
	fimPara
	
	retorna raizQuadrada(somaDosQuadrados);
fimFuncao

funcao real produtoInterno(real vetor1[], real vetor2[], inteiro tamanhoVetores)
	/*
	 * Recebe dois vetores e retorna o produto interno entre esses dois vetores no espaço
	 * se u = (u_1, u_2, ..., u_n) e v = (v_1, v_2, ..., v_n) forem vetores em R^n, então o Produto Interno entre esses dois vetores é u•v = ||u|| ||v|| cos(θ) = (u_1v_1 + u_2v_2 + ... + u_nv_n)
	 */
	real produtoI;
	inteiro i;
	produtoI = 0;
	para (i de 0 ate tamanhoVetores-1 passo 1) faca
		produtoI = produtoI + vetor1[i]*vetor2[i];
	fimPara
	
	retorna produtoI;
fimFuncao

funcao texto produtoVetorial(real vetor1[], real vetor2[])
	/*
	 * Recebe dois vetores e retorna o produto vetorial entre esses dois vetores no espaço
	 * se u = (u_1, u_2, u_3) e v = (v_1, v_2, v_3) forem vetores em R^3, então o Produto Vetorial entre esses dois vetores é u×v = (u_2v_3-u_3v_2, u_3v_1-u_1v_3, u_1v_2-u_2v_1)
	 */
	real produtoV[3];
	produtoV[0] = vetor1[1]*vetor2[2]-vetor1[2]*vetor2[1];
	produtoV[1] = vetor1[2]*vetor2[0]-vetor1[0]*vetor2[2];
	produtoV[2] = vetor1[0]*vetor2[1]-vetor1[1]*vetor2[0];
	
	retorna formatarVetor(produtoV, 3);
fimFuncao
